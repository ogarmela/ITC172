 BIN +156 Bytes TechReviewProject/TechReviewApp/__pycache__/__init__.cpython-36.pyc 

Binary file not shown.

  BIN +197 Bytes TechReviewProject/TechReviewApp/__pycache__/admin.cpython-36.pyc 

Binary file not shown.

  BIN +194 Bytes TechReviewProject/TechReviewApp/__pycache__/models.cpython-36.pyc 

Binary file not shown.

  BIN +285 Bytes TechReviewProject/TechReviewApp/__pycache__/urls.cpython-36.pyc 

Binary file not shown.

  BIN +336 Bytes TechReviewProject/TechReviewApp/__pycache__/views.cpython-36.pyc 

Binary file not shown.

  3  TechReviewProject/TechReviewApp/admin.py 

@@ -0,0 +1,3 @@

from django.contrib import admin



# Register your models here.

  5  TechReviewProject/TechReviewApp/apps.py 

@@ -0,0 +1,5 @@

from django.apps import AppConfig





class TechreviewappConfig(AppConfig):

    name = 'TechReviewApp'

  BIN +167 Bytes TechReviewProject/TechReviewApp/migrations/__pycache__/__init__.cpython-36.pyc 

Binary file not shown.

  3  TechReviewProject/TechReviewApp/models.py 

@@ -0,0 +1,3 @@

from django.db import models



# Create your models here.

  6  TechReviewProject/TechReviewApp/templates/TechReviewApp/index.html 

@@ -0,0 +1,6 @@

{% extends 'base.html' %}

{% block content %}

  <h2>Tech Review</h2>

  <p>Welcome to the site that reviews everything tech</p>

  <p>Under construction</p>

{% endblock %} 

  30  TechReviewProject/TechReviewApp/templates/base.html 

@@ -0,0 +1,30 @@

<!DOCTYPE html>

 <html> 

<head> 

<title>Tech Review</title> 

<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"> 

<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css"> 

<link href='//fonts.googleapis.com/css?family=Lobster&subset=latin,latin-ext' rel='stylesheet' type='text/css'> 

</head> 

<body> 

<div class='jumbotron'> 

<h1>Tech Reviews</h1>

 </div> 

   <nav class="navbar navbar-default"> 

   <div class="container-fluid">

<div class="navbar-header"> 

<a class="navbar-brand" href="{% url 'index' %}">Tech Reviews</a> 

</div> 

<ul class="nav navbar-nav"> 

<li>Dummy</li>

<li>Dummy</li> 

</ul> 

</div> 

</nav> 

<div class="container-fluid"> 

{% block content %} 



{% endblock content %} 

</div> 

</body> 

</html> 

  3  TechReviewProject/TechReviewApp/tests.py 

@@ -0,0 +1,3 @@

from django.test import TestCase



# Create your tests here.

  8  TechReviewProject/TechReviewApp/urls.py 

@@ -0,0 +1,8 @@

from django.urls import path

from . import views



#this is a comment

urlpatterns=[

    path('', views.index, name='index'),

]



  5  TechReviewProject/TechReviewApp/views.py 

@@ -0,0 +1,5 @@

from django.shortcuts import render



# Create your views here.

def index(request):

    return render(request, 'TechReviewApp/index.html') 

  BIN +160 Bytes TechReviewProject/TechReviewProject/__pycache__/__init__.cpython-36.pyc 

Binary file not shown.

  BIN +2.33 KB TechReviewProject/TechReviewProject/__pycache__/settings.cpython-36.pyc 

Binary file not shown.

  BIN +1013 Bytes TechReviewProject/TechReviewProject/__pycache__/urls.cpython-36.pyc 

Binary file not shown.

  BIN +583 Bytes TechReviewProject/TechReviewProject/__pycache__/wsgi.cpython-36.pyc 

Binary file not shown.

  125  TechReviewProject/TechReviewProject/settings.py 

@@ -0,0 +1,125 @@

"""
Django settings for TechReviewProject project.
Generated by 'django-admin startproject' using Django 2.2.
For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""



import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))





# Quick-start development settings - unsuitable for production

# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/



# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = 's)mu&$)pwk5m(wt0p9ub)-eue$qk^j+)8np0=vht!p)5_5_6_z'



# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True



ALLOWED_HOSTS = []

# Application definition



INSTALLED_APPS = [

    'django.contrib.admin',

    'django.contrib.auth',

    'django.contrib.contenttypes',

    'django.contrib.sessions',

    'django.contrib.messages',

    'django.contrib.staticfiles',

    'TechReviewApp',

]


MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.common.CommonMiddleware',

    'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',

    'django.contrib.messages.middleware.MessageMiddleware',

    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]



ROOT_URLCONF = 'TechReviewProject.urls'



TEMPLATES = [

    {

        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        'DIRS': [],

        'APP_DIRS': True,

        'OPTIONS': {

            'context_processors': [

                'django.template.context_processors.debug',

                'django.template.context_processors.request',

                'django.contrib.auth.context_processors.auth',

                'django.contrib.messages.context_processors.messages',

            ],

        },

    },

]



WSGI_APPLICATION = 'TechReviewProject.wsgi.application'

# Database

# https://docs.djangoproject.com/en/2.2/ref/settings/#databases



DATABASES = {

    'default': {

        'ENGINE': 'django.db.backends.postgresql_psycopg2',

        'NAME': 'techreviewdb',

        'USER' : 'postgres',

        'PASSWORD': 'P@ssw0rd1',

        'HOST' :'localhost',

        'PORT' :'',

}

}

# Password validation

# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators



AUTH_PASSWORD_VALIDATORS = [

    {

        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',

    },

    {

        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',

    },

    {

        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',

    },

    {

        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',

    },

]

# Internationalization

# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)

# https://docs.djangoproject.com/en/2.2/howto/static-files/



STATIC_URL = '/static/'

  22  TechReviewProject/TechReviewProject/urls.py 

@@ -0,0 +1,22 @@

"""TechReviewProject URL Configuration
The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/2.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""

from django.contrib import admin

from django.urls import path, include



urlpatterns = [

    path('admin/', admin.site.urls),

    path('TechReviewApp/', include('TechReviewApp.urls')),

]

  16  TechReviewProject/TechReviewProject/wsgi.py 

@@ -0,0 +1,16 @@

"""
WSGI config for TechReviewProject project.
It exposes the WSGI callable as a module-level variable named ``application``.
For more information on this file, see
https://docs.djangoproject.com/en/2.2/howto/deployment/wsgi/
"""

import os
from django.core.wsgi import get_wsgi_application



os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'TechReviewProject.settings')



application = get_wsgi_application()

  21  TechReviewProject/manage.py 

@@ -0,0 +1,21 @@

#!/usr/bin/env python

"""Django's command-line utility for administrative tasks."""

import os

import sys





def main():

    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'TechReviewProject.settings')

    try:

        from django.core.management import execute_from_command_line

    except ImportError as exc:

        raise ImportError(

            "Couldn't import Django. Are you sure it's installed and "

            "available on your PYTHONPATH environment variable? Did you "

            "forget to activate a virtual environment?"

        ) from exc

    execute_from_command_line(sys.argv)

if __name__ == '__main__':

    main()
